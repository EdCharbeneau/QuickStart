@using QuickStart.Models
@{
    ViewBag.Title = "Team Efficiency";
    var placeholder = QuickStart.Models.PlaceholderModel.GetPlaceholderData();
    var names = QuickStart.Models.Name.GetListView();
    var salesPerson = new QuickStart.Models.InvoiceParameters { SalesPerson = "Steven Buchanan" };
}

<section id="app-title-bar" class="row">
    <div class="col-sm-3">
        <h1 class="title">@ViewBag.Title</h1>
    </div>
</section>
<div class="hamburger">
    <!-- toggle button for responsive panel, hidden on large screens -->
    @(Html.Kendo().Button()
                .Name("menuPanelOpen")
                .Content("menu")
                .Icon("hbars")
                .HtmlAttributes(new { @class = "k-rpanel-toggle" })
    )
</div>
<div class="app-wraper">

    @(Html.Kendo().ResponsivePanel().Name("menuPanel").Breakpoint(768).Content(
    @<div>
        <div class="text-right">
            @(Html.Kendo().Button()
               .Name("menuPanelClose")
               .Content("Close")
               .Icon("close")
               .HtmlAttributes(new { @class = "k-rpanel-toggle" })
            )
        </div>
        <h3>Report Range</h3>
        <p>@Html.Label("Stats from")</p>
        <p>
            @(Html.Kendo().DatePicker()
                    .Name("StatsFrom")
                    .Value(new DateTime(1996, 1, 1))
                    .Events(e => e.Change("onCriteriaChange")))
        </p>
        <p>@Html.Label("Stats to")</p>
        <p>
            @(Html.Kendo().DatePicker()
                .Name("StatsTo")
                .Value(new DateTime(1998, 8, 1))
                .Events(e => e.Change("onCriteriaChange")))
        </p>
        <nav id="employee-list">
            <h3>Team members</h3>
            @(Html.Kendo().ListView<Employee>()
                .Name("EmployeesList")
                .ClientTemplateId("EmployeeItemTemplate")
                .TagName("ul")
                .DataSource(dataSource =>
                {
                    dataSource.Read(read => read.Action("EmployeesList_Read", "Invoice"));
                    dataSource.PageSize(9);
                })
                .Selectable(s => s.Mode(ListViewSelectionMode.Single))
                .Events(e => e.DataBound("onListDataBound").Change("onCriteriaChange"))
            )

        </nav>
    </div>
))
    <section id="main-section-content" class="row">
        <article class="col-xs-12">
            <div id="employee-details" class="row">
                <div id="employee-about" class="col-xs-12 col-lg-4">
                </div>
                <div class="col-xs-12 col-lg-4">
                    <div class="chart-wrap">
                        <h3 class="chart-title">Quarter to date sales</h3>
                        <p class="sales-report-value" id="EmployeeQuarterSalesLabel">$6,517.47</p>
                        <img src="/Content/Temp/chart1.png" />
                    </div>
                </div>
                <div class="col-xs-12 col-lg-4">
                    <div class="chart-wrap">
                        <h3 class="chart-title">Monthly Average Sales</h3>
                        <p class="sales-report-value" id="EmployeeAverageSalesLabel">$8,788.86</p>
                        <img src="/Content/Temp/chart2.png" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <h3>Representative orders</h3>
                    @Html.Action("Index", "Invoice")
                </div>
            </div>
        </article>
    </section>
</div>

<script type="text/x-kendo-tmpl" id="employeeAvatarTemplate">
    <img src="@(Url.Content("~/content/employees/"))#:EmployeeId#.png" />
    <span>#:FullName#</span>
</script>

<script type="text/x-kendo-tmpl" id="EmployeeItemTemplate">
    <li class="employee">
        <div>
            <img src="@(Url.Content("~/content/employees/"))#:EmployeeId#-t.png" />
            <span> #: FullName #</span>
        </div>
    </li>
</script>

<script>
    function onListDataBound(e) {
        this.select($(".employee:first"));
    }

    function getSelectedEmployee() {
        var employeeList = $("#EmployeesList").data("kendoListView");
        var employee = employeeList.dataSource.getByUid(employeeList.select().attr("data-uid"));
        return employee;
    }

    function updateEmployeeAvatar(employee) {
        var template = kendo.template($("#employeeAvatarTemplate").html());
        //apply template
        $("#employee-about").html(template(employee));
    }

    function createEmployeeFilter(employee) {

        var statsFrom = $("#StatsFrom").data("kendoDatePicker");
        var statsTo = $("#StatsTo").data("kendoDatePicker");

        var filter = {
            employeeId: employee.EmployeeId,
            salesPerson: employee.FullName,
            statsFrom: statsFrom.value(),
            statsTo: statsTo.value()
        }
        return filter;
    }

    function refreshGrid(filter) {
        var employeeSales = $("#EmployeeSales").data("kendoGrid");
        employeeSales.dataSource.read(filter);
    }

    function onCriteriaChange() {
        var employee = getSelectedEmployee();
        var filter = createEmployeeFilter(employee);
        refreshGrid(filter);
        updateEmployeeAvatar(employee);

        //teamSales.dataSource.read(filter);
        //employeeQuarterSales.dataSource.read(filter);
        //employeeAverageSales.dataSource.read(filter);
    }
</script>